name: Update Nix flake

on:
  schedule:
    - cron: "0 0 * * 0"
  workflow_dispatch:

defaults:
  run:
    shell: nu {0}

jobs:
  update-nixos-unstable:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: hustcer/setup-nu@main
        with:
          version: "0.106.1"
      - uses: cachix/install-nix-action@v31
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      - name: Run nix flake update
        run: |
          nix flake metadata --json | save -f before.json
          nix flake update 
          nix flake metadata --json | save -f after.json

          let root_nodes = open before.json | get locks.nodes.root.inputs | values
          let before = open before.json | get locks.nodes
          let after = open after.json | get locks.nodes

          mut results = []

          for root_node in $root_nodes {
              let before_node = $before | get $root_node
              let after_node = $after | get $root_node

              if $before_node.locked.rev != $after_node.locked.rev {
                  $results = $results | append {
                      "input": $"*($root_node)*"
                      "previous rev": $"($before_node.locked.rev) \(($before_node.locked.lastModified | into datetime -f '%s' | format date '%Y-%m-%d %H:%M:%S%:z')\)" 
                      "current rev": $"($after_node.locked.rev) \(($after_node.locked.lastModified | into datetime -f '%s' | format date '%Y-%m-%d %H:%M:%S%:z')\)" 
                  }
              }
          }

          $results | to md | save -f output
      - name: Commit and push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BRANCH: master
          BRANCH_DATE_FORMAT: "%Y%m%d%H%M%S"
        run: |
          let date_str = date now
            | date to-timezone UTC
            | format date $env.BRANCH_DATE_FORMAT
          let branch_name = $"update-nix-flake-($date_str)"

          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          git checkout -b $branch_name
          git add flake.lock
          git commit -m "Flake bump"
          git push -u origin $branch_name

          let pr_body = open output

          gh pr create --title $"Flake bump ($date_str)" --body $pr_body --base $env.DEFAULT_BRANCH --head $branch_name
